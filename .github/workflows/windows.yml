name: Windows
on: 
  push:
    branches: main
    tags:
      - 'V*'
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: Library/build
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64
  PYTHON_PATH: C:/hostedtoolcache/windows/Python/3.8.7/x64
  HOME: D:/a/saltwatereos/saltwatereos
jobs:
  buildApp:
    name: library
    runs-on: windows-latest
    steps:
      # checkout source code
      - uses: actions/checkout@v2

      # config msbuild
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1

      # install Qt5
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.0
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          dir: '${{ github.workspace }}/QT/'

      # install dependencies, e.g. VTK, swig
      - name: install dependencies
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          git clone https://github.com/zguoch/dependencies_swEOS.git
          cd dependencies_swEOS/windows
          unzip -qq swigwin-4.0.2.zip
          unzip -qq VTK8.2.zip

      # get short SHA of commit 
      - name: Add SHORT_SHA env property with commit short sha
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: info 
        run: |
          cmake --version
          g++ --version
          echo ${{ github.ref }}
          echo "commit id short" ${SHORT_SHA}

      # build swEOS library
      - name: build library
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          cd ${{env.HOME}}
          mkdir Library/build
          cd Library/build
          cmake -DSWIG_EXECUTABLE=${{env.HOME}}/dependencies_swEOS/windows/swigwin-4.0.2/swig.exe -DPYTHON_INCLUDE_DIR=${{env.PYTHON_PATH}}/include -DPYTHON_LIBRARY=${{env.PYTHON_PATH}}/libs/python38.lib -DBuild_API_tcl=OFF -DCMAKE_BUILD_TYPE=${{env.BUILD_CONFIGURATION}} -DCMAKE_GENERATOR_PLATFORM=${{env.BUILD_PLATFORM}} ..
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} eosH2ONaCl.sln
          mkdir ../API/python/pyswEOS
          cp swig/H2O/H2O.py ../API/python/pyswEOS
          cp swig/H2O/Release/*H2O* ../API/python/pyswEOS
          cp swig/NaCl/NaCl.py ../API/python/pyswEOS
          cp swig/NaCl/Release/*NaCl* ../API/python/pyswEOS
          cp swig/H2ONaCl/H2ONaCl.py ../API/python/pyswEOS
          cp swig/H2ONaCl/Release/*H2ONaCl* ../API/python/pyswEOS
          mkdir ../lib
          cp Release/*.lib ../lib/

      # build swEOS cmd app
      - name: build cmd app
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          cd ${{env.HOME}}
          mkdir commandline\build
          cd commandline\build
          cmake ..
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} SaltWaterEOS.sln
      
      # build desktop app
      - name: build desktop app
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          cd ${{env.HOME}}
          mkdir desktop/build
          cd desktop/build
          cmake -DCMAKE_GENERATOR_PLATFORM=${{env.BUILD_PLATFORM}} -DVTK_DIR=${{env.HOME}}/dependencies_swEOS/windows/VTK8.2/lib/cmake/vtk-8.2 ..
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} SaltWaterEOS.sln
          ../../QT/Qt/5.15.2/msvc2019_64/bin/windeployqt.exe Release/swEOS.exe
          cp ${{env.HOME}}/dependencies_swEOS/windows/VTK8.2/bin/*.dll Release

      # package
      - name: package
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          cd ${{env.HOME}}
          mkdir swEOS_windows
          cp -r Library/lib swEOS_windows/
          cp -r Library/API swEOS_windows/
          cp -r Library/include swEOS_windows/
          cp commandline\build\Release\*.exe swEOS_windows\swEOS_cmd.exe
          cp -r desktop\build\Release swEOS_windows\
          7z a -tzip swEOS_windows ./swEOS_windows/*
          
      # debug workflow
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      - uses: actions/upload-artifact@v2
        with:
          name: swEOS_windows_${{env.SHORT_SHA}}.zip
          path: swEOS_windows.zip
    
      # tag 上传Release
      - name: get tag name
        if: startsWith(github.event.ref, 'refs/tags/')
        run: |
          echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "GIT_TAG=$(git describe --tags --abbrev=0)"
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: swEOS_windows.zip
          asset_name: swEOS_windows_${{env.GIT_TAG}}.zip
          tag: ${{ github.ref }}
          overwrite: true